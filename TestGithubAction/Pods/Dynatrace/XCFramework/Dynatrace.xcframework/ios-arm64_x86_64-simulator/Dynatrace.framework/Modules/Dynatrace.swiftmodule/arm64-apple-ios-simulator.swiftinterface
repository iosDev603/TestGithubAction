// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature OpaqueTypeErasure -enable-bare-slash-regex -module-name Dynatrace
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
@_exported import Dynatrace
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 13.0, *)
extension SwiftUICore.View {
  @available(*, deprecated, message: "Use withCustomInstrumentationConfig(.skipInstrumentation) instead")
  @_Concurrency.MainActor @preconcurrency public func skippingInstrumentation() -> some SwiftUICore.View
  
  @available(*, deprecated, message: "Use withCustomInstrumentationConfig(.useDefaultControlName) instead")
  @_Concurrency.MainActor @preconcurrency public func withDefaultControlName() -> some SwiftUICore.View
  
  @_Concurrency.MainActor @preconcurrency public func withCustomInstrumentationConfig(_ params: SwiftUIInstrumentationConfigParam...) -> some SwiftUICore.View
  
}
@available(iOS 13.0, *)
public enum SwiftUIInstrumentationConfigParam {
  case skipInstrumentation, useDefaultControlName, doNotReportStateVariable
  public static func == (a: SwiftUIInstrumentationConfigParam, b: SwiftUIInstrumentationConfigParam) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 13.0, *)
@_Concurrency.MainActor @preconcurrency public struct instrument<Content> : Swift.Sendable, SwiftUICore.View where Content : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(with values: [Swift.String : Swift.String], viewName: Swift.String, createAction: Swift.Bool = true, @SwiftUICore.ViewBuilder _ content: @escaping () -> Content)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
  public typealias Body = @_opaqueReturnTypeOf("$s9Dynatrace10instrumentV4bodyQrvp", 0) __<Content>
}
@available(iOS 13.0, *)
extension SwiftUIInstrumentationConfigParam : Swift.Equatable {}
@available(iOS 13.0, *)
extension SwiftUIInstrumentationConfigParam : Swift.Hashable {}
