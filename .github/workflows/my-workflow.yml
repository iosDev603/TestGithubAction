name: iOS Build and Upload .app as .zip

on:
  push:
    branches:
      - main  # This will trigger the action when merging to the main branch

jobs:
  build:
    runs-on: macos-15  # Choose macOS as the runner for iOS build

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install Xcode 16.1
        run: |
          sudo gem install xcode-install
          xcversion install 16.1
          sudo xcode-select -s /Applications/Xcode.app

      - name: Clean Derived Data
        run: rm -rf ~/Library/Developer/Xcode/DerivedData/*

      - name: Install Rosetta 2 if not installed
        run: |
          if ! /usr/bin/pgrep -q oahd; then
            echo "Rosetta 2 not found. Installing..."
            sudo softwareupdate --install-rosetta --agree-to-license
          else
            echo "Rosetta 2 already installed."
          fi

      # Install dependencies (if any)
      - name: Install dependencies
        run: |
          cd /Users/runner/work/TestGithubAction/TestGithubAction/TestGithubAction/
          pod install --repo-update

      # Build the iOS App
      - name: Build the iOS Simulator app
        run: |
          PROJECT_PATH="/Users/runner/work/TestGithubAction/TestGithubAction/TestGithubAction/TestGithubAction.xcworkspace"
          SCHEME="TestGithubAction"
          CONFIGURATION="Debug"  # or "Release" "Debug"
          
          # Step 2: Build the project
          echo "Building the project..."
          export DEBUG_INFORMATION_FORMAT=DWARF
          xcodebuild \
            -workspace "$PROJECT_PATH" \
            -scheme "$SCHEME" \
            -sdk iphonesimulator \
            -configuration $CONFIGURATION \
            -destination 'platform=iOS Simulator,OS=latest,name=iPad (10th generation)' \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_ALLOWED=NO clean build | tee result.log

            
      # List files to check the build output
      - name: List files in build directory
        run: |
          echo "Listing contents of build directory:"
          ls -R ~/Library/Developer/Xcode/DerivedData/*
          cd /Users/runner/Library/Developer/Xcode/DerivedData/TestGithubAction-edbsdfkjvqekcaguwsuoghnlgyic/Build/Products/Debug-iphonesimulator/
           # cd /Users/runner/Library/Developer/Xcode/DerivedData/TestGithubAction-dmkqqwxmpoxlhbhjhklbtavmjqac/Build/Products/Debug-iphonesimulator/
           zip -r ${{ github.workspace }}/file/TestGithubAction.zip TestGithubAction.app
          
      # Upload the .zip file
      - name: Upload .zip file
        uses: actions/upload-artifact@v4
        with:
          name: KDS-Development
          path: ${{ github.workspace }}/file/TestGithubAction.zip
